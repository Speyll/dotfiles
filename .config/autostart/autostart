#!/bin/sh

# Log file for errors and output
LOGFILE="/tmp/autostart.log"

# Options
ENABLE_AUDIO=false # Options: true or false
WALLPAPER_MODE="swaybg-random-online" # Options: "swaybg", "swaybg-random", "mpvpaper-local", "mpvpaper-online", "swaybg-random-online", "wallhaven", "none"
WAYBAR_STYLE="none" # Options: "stacking", "tiling", "none"
THEME_MODE="fixed" # Options: "auto", "fixed", "none"
FLAVOURS_THEME="gruvbox-dark-medium"
CURSOR_THEME="Kaela-Kovalskia-v2"
ENABLE_UPDATE_SCAN=true # Options: true or false

# --- Environment Setup ---
dbus-update-activation-environment --all >>"$LOGFILE" 2>&1 &
/usr/libexec/polkit-gnome-authentication-agent-1 >>"$LOGFILE" 2>&1 &

# --- Monitor Layout ---
wlr-randr --output DP-2 --on --mode 1920x1080@120.000000Hz --pos 0,0 --transform normal --scale 1 --adaptive-sync enabled && \
wlr-randr --output HDMI-A-1 --on --mode 1920x1080@60.000000Hz --pos -1080,-840 --transform 270 --scale 1 --adaptive-sync enabled >>"$LOGFILE" 2>&1 &

# --- Process Management ---
for process in openrgb flavours mpvpaper swaybg fnott wlsunset cliphist; do
    pkill -x "$process" >>"$LOGFILE" 2>&1
done

# --- Audio Services ---
if [ "$ENABLE_AUDIO" = true ]; then
    for process in pipewire wireplumber pipewire-pulse; do
        pkill -x "$process" >>"$LOGFILE" 2>&1
    done
    pipewire >>"$LOGFILE" 2>&1 &
    sleep 1
    wireplumber >>"$LOGFILE" 2>&1 &
    pipewire-pulse >>"$LOGFILE" 2>&1 &
fi

# --- OpenRGB ---
if command -v openrgb >/dev/null 2>&1; then
    openrgb --server -p pureWhite >>"$LOGFILE" 2>&1 &
else
    echo "OpenRGB is not installed, skipping RGB startup." >>"$LOGFILE"
fi

# --- Wallpaper Setup ---
DEFAULT_WALLPAPER="$HOME/pictures/walls/wall.jpg"
DEFAULT_VERT_WALLPAPER="$HOME/pictures/walls/vert-wall.jpg"
URL_FILE="$HOME/.config/autostart/wallpaper_urls.txt"
VERT_URL_FILE="$HOME/.config/autostart/vert-walls_urls.txt"

# --- Wallhaven Integration ---
download_wallhaven_wallpaper() {
    ratio=$1; out=$2; fallback=$3; res=$4
    page=$(shuf -i 1-5 -n1)
    json=$(curl -sf "https://wallhaven.cc/api/v1/search?categories=110&purity=100&sorting=toplist&topRange=1y&ratios=$ratio&atleast=$res&page=$page&per_page=24") || {
        echo "Wallhaven API failed (ratio $ratio)." >>"$LOGFILE"
        cp "$fallback" "$out"
        return
    }
    count=$(echo "$json" | jq '.data | length')
    [ "$count" -eq 0 ] && cp "$fallback" "$out" && return
    idx=$(shuf -i 0-$((count - 1)) -n1)
    url=$(echo "$json" | jq -r ".data[$idx].path")
    curl -sfL "$url" -o "$out" || cp "$fallback" "$out"
}

# Set wallpaper based on mode
case "$WALLPAPER_MODE" in
    wallhaven)
        download_wallhaven_wallpaper "16x9" /tmp/wallpaper.jpg "$DEFAULT_WALLPAPER" "1920x1080"
        download_wallhaven_wallpaper "9x16" /tmp/vert_wallpaper.jpg "$DEFAULT_VERT_WALLPAPER" "1080x1920"
        wallpaper_path="/tmp/wallpaper.jpg"
        vert_wallpaper_path="/tmp/vert_wallpaper.jpg"
        swaybg -o DP-2 -i "$wallpaper_path" -o HDMI-A-1 -i "$vert_wallpaper_path" -m fill >>"$LOGFILE" 2>&1 &
        ;;
    swaybg)
        wallpaper_path="$DEFAULT_WALLPAPER"
        vert_wallpaper_path="$DEFAULT_VERT_WALLPAPER"
        swaybg -o DP-2 -i "$wallpaper_path" -o HDMI-A-1 -i "$vert_wallpaper_path" -m fill >>"$LOGFILE" 2>&1 &
        ;;
    swaybg-random)
        wallpaper_path=$(find "$HOME/pictures/walls/"*.jpg -type f | shuf -n1)
        [ -z "$wallpaper_path" ] && wallpaper_path="$DEFAULT_WALLPAPER"
        vert_wallpaper_path=$(find "$HOME/pictures/walls/"vert-*.jpg -type f | shuf -n1)
        [ -z "$vert_wallpaper_path" ] && vert_wallpaper_path="$DEFAULT_VERT_WALLPAPER"
        swaybg -o DP-2 -i "$wallpaper_path" -o HDMI-A-1 -i "$vert_wallpaper_path" -m fill >>"$LOGFILE" 2>&1 &
        ;;
    swaybg-random-online)
        wallpaper_url=$(shuf -n1 "$URL_FILE")
        curl -sL "$wallpaper_url" -o /tmp/wallpaper.jpg || cp "$DEFAULT_WALLPAPER" /tmp/wallpaper.jpg
        vert_wallpaper_url=$(shuf -n1 "$VERT_URL_FILE")
        curl -sL "$vert_wallpaper_url" -o /tmp/vert_wallpaper.jpg || cp "$DEFAULT_VERT_WALLPAPER" /tmp/vert_wallpaper.jpg
        swaybg -o DP-2 -i /tmp/wallpaper.jpg -o HDMI-A-1 -i /tmp/vert_wallpaper.jpg -m fill >>"$LOGFILE" 2>&1 &
        ;;
    none) ;;
    *) echo "Unknown WALLPAPER_MODE: $WALLPAPER_MODE" >>"$LOGFILE" ;;
esac

# --- Theme Configuration ---
case "$THEME_MODE" in
    auto)
        if [ -n "$wallpaper_path" ]; then
            flavours generate dark "$wallpaper_path" >>"$LOGFILE" 2>&1
            flavours apply generated >>"$LOGFILE" 2>&1 &
        fi
        ;;
    fixed)
        flavours apply "$FLAVOURS_THEME" >>"$LOGFILE" 2>&1 &
        ;;
    none) ;;
esac

# --- GNOME Color Scheme ---
gsettings set org.gnome.desktop.interface color-scheme prefer-dark >>"$LOGFILE" 2>&1 &

# --- Waybar Configuration ---
case "$WAYBAR_STYLE" in
    stacking)
        pkill -x waybar >>"$LOGFILE" 2>&1
        waybar -c "$HOME/.config/waybar/stacking-config" -s "$HOME/.config/waybar/style.css" >>"$LOGFILE" 2>&1 &
        ;;
    tiling)
        pkill -x waybar >>"$LOGFILE" 2>&1
        waybar -c "$HOME/.config/waybar/tiling-config" -s "$HOME/.config/waybar/style.css" >>"$LOGFILE" 2>&1 &
        ;;
    none) ;;
esac

# --- Cursor Theme ---
gsettings set org.gnome.desktop.interface cursor-theme "$CURSOR_THEME" >>"$LOGFILE" 2>&1 &
seat seat0 xcursor_theme "$CURSOR_THEME" >>"$LOGFILE" 2>&1 &

# --- Additional Services ---
fnott >>"$LOGFILE" 2>&1 &
wlsunset -l 36.7 -L 3.08 >>"$LOGFILE" 2>&1 &
wl-paste --watch cliphist store -max-items 100 >>"$LOGFILE" 2>&1 &

# --- Update Scan ---
if [ "$ENABLE_UPDATE_SCAN" = true ]; then
    sleep 2
    "$HOME/.local/bin/updtscan" >>"$LOGFILE" 2>&1 &
fi
